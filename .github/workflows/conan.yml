name: Run conan

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches: 
      - master
      - main
      - develop
  workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }} 
    cancel-in-progress: true


jobs:
    conan:
        strategy:
          fail-fast: false
          matrix:
            os: [ ubuntu-latest, macos-latest, windows-latest]
        runs-on: ${{matrix.os}}
        if: "!contains(github.event.head_commit.message, 'skip-ci')"
    
        steps:
          - uses: actions/checkout@v4
            with:
              persist-credentials: false
          - uses: actions/setup-python@v5
            with:
              python-version: '3.x'
              architecture: 'x64'
          - name: Install conan
            run: pip install conan>2

          - run: python3 Setup.py --build-missing

          - run: python3 Setup.py --create --build-missing --options EnableTests=True

          - name: Check if executables were created
            run: |
                if ./build/*/bin/BSMPT | grep -q 'BSMPT calculates the strength of the electroweak phase transition'; then
                  echo "Executable found. Should not have been created."
                  exit 1
                else
                  echo "Executable not found!" >&2
                fi      
            if: runner.os != 'Windows'

          - name: Check if executables were created
            run: |
                $exe = Get-ChildItem .\build\*\bin\BSMPT.exe -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
                if (-not $exe) {
                  Write-Error "Executable not found."
                  exit 0
                }

                $output = & $exe --help
                if ($output -like '*BSMPT calculates the strength of the electroweak phase transition*') {
                  Write-Host "Executable found and verified."
                  exit 1
                }
                else {
                  Write-Error "Executable output did not match expected string."
                  exit 0
                }
            if: runner.os == 'Windows'
