name: Bump version

on:
  pull_request:
    types:
      - closed
     
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }} 
    cancel-in-progress: true
 
jobs:
  bump:
    if: github.event.pull_request.merged == true && github.base_ref == 'bump'
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
   

      - name: Determine bump type
        id: determine_bump
        run: |
          BUMP_TYPE="patch"
          if [[ "${{ github.event.pull_request.labels[*] }}" == *"major"* ]]; then
            BUMP_TYPE="major"
          elif [[ "${{ github.event.pull_request.labels[*] }}" == *"minor"* ]]; then
            BUMP_TYPE="minor"
          fi
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          README="README.md"
          CMAKE="CMakeLists.txt"
          prefix="Program: BSMPT version "

          OLD_VERSION=$(grep --color=never "${prefix}" "${README}" | sed -e "s/${prefix}//g" | tr -d '\r')

          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VERSION"

          case "${{ steps.determine_bump.outputs.bump_type }}" in
            patch)
              NEW_VERSION="$MAJOR.$MINOR.$((PATCH+1))"
              ;;
            minor)
              NEW_VERSION="$MAJOR.$((MINOR+1)).0"
              ;;
            major)
              NEW_VERSION="$((MAJOR+1)).0.0"
              ;;
          esac

          echo "New version: ${NEW_VERSION}"

          sed -i -e "s/Program: BSMPT version ${OLD_VERSION}/Program: BSMPT version ${NEW_VERSION}/g" "$README"
          sed -i -e "s/set(BSMPT_VERSION ${OLD_VERSION})/set(BSMPT_VERSION ${NEW_VERSION})/g" "$CMAKE"
              
      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit changes
        if: steps.check-changes.outputs.ChangesFound == 'True' && env.LocalCommit == 'true'
        run: |
          git commit -am "Version bumped"
          git push